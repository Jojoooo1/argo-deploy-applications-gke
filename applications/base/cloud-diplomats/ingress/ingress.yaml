apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cloud-diplomats-ingress
  namespace: cloud-diplomats
  
  annotations:
    # SSL
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # Body
    nginx.ingress.kubernetes.io/proxy-body-size: 25m

    # Sticky session
    # nginx.ingress.kubernetes.io/affinity: "cookie"
    # nginx.ingress.kubernetes.io/session-cookie-name: "nginx-sticky-cookie"
    # nginx.ingress.kubernetes.io/session-cookie-expires: "86400"
    # nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"

    # Add retry on http_502+ for better network reliability
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout http_502 http_503 http_504"

    # Warning: be very carefull with DNS collisions since it will replace any existing DNS
    # external-dns.alpha.kubernetes.io/ingress-hostname-source: annotation-only # DO NOT REMOVE TO PREVENT UNWANTED BEHAVIOR
    # external-dns.alpha.kubernetes.io/hostname: api${ARGOCD_ENV_DNS}.cloud-diplomats.com

spec:
  ingressClassName: nginx
  tls:
    - secretName: cloud-diplomats-tls
      hosts:
        # - api${ARGOCD_ENV_DNS}.cloud-diplomats.com
        - hello-world${ARGOCD_ENV_DNS}.cloud-diplomats.com

  rules:
    # - host: api${ARGOCD_ENV_DNS}.cloud-diplomats.com
    #   http:
    #     paths:
    #       - path: /
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: api
    #             port:
    #               number: 80

    - host: hello-world${ARGOCD_ENV_DNS}.cloud-diplomats.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hello-world
                port:
                  number: 80

    
